import { gql } from '@apollo/client'
import { format } from 'date-fns'
import { GetStaticPaths, GetStaticProps } from 'next'
import Head from 'next/head'
import Image from 'next/image'

import { Content } from '../../components/Content'

import { client } from '../../services/client'

interface Post {
  post: {
    content: {
      html: string
    }
    createdBy: {
      name: string
    }
    id: string
    title: string
    preview: string
    tags: string[]
    createdAt: string
  }
}

export default function PostBySlug({ post }: Post) {
  return (
    <>
      <Head>
        <title>Andres.</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Content>
        <header className="mt-10 border-b dark:border-zinc-700">
          <section className="flex flex-row items-center justify-between mb-10">
            <div className="flex items-center justify-between">
              <div className="p-1 border-2 border-zinc-700 dark:border-white rounded-full">
                <Image
                  src="https://github.com/AndresdoSantos.png"
                  alt="My profile photo"
                  width={32}
                  height={32}
                  className="rounded-full"
                />
              </div>

              <p className="text-xs mb-0 dark:text-zinc-300 text-zinc-500 ml-2">
                Written by{' '}
                <strong className="dark:text-white text-sm font-medium">
                  {post.createdBy.name}
                </strong>{' '}
                in{' '}
                <strong className="dark:text-white text-sm font-medium">
                  {format(new Date(post.createdAt), "MMM dd',' yyyy")}
                </strong>
              </p>
            </div>
          </section>

          <h1>{post.title}</h1>

          <p>{post.preview}</p>
        </header>

        <div className="flex items-center relative">
          <button className="fixed left-20">Seta para esquerda</button>

          <article
            className="mt-10"
            dangerouslySetInnerHTML={{ __html: post.content.html }}
          />

          <button className="fixed right-20">Seta para direita</button>
        </div>
      </Content>
    </>
  )
}

export const getStaticPaths: GetStaticPaths = async () => {
  return {
    paths: [],
    fallback: 'blocking',
  }
}

export const getStaticProps: GetStaticProps = async ({ params }) => {
  const { slug } = params

  const { data } = await client.query({
    query: gql`
      query GetAllPosts($slug: String) {
        postsConnection(where: { slug: $slug }) {
          edges {
            node {
              id
              tags
              title
              preview
              createdAt
              content {
                html
              }
              createdBy {
                name
              }
            }
          }
        }
      }
    `,
    variables: {
      slug,
    },
  })

  return {
    props: {
      post: data ? data.postsConnection.edges[0].node : {},
    },
  }
}
